"""
This type stub file was generated by pyright.
"""

class LumpedNodesandLeads:
    """Defines attributes of the lumped element node capacitors and lead inductors.

    This class allows you to define and modify the node capacitors and
    lead inductors parameters of the lumped elements used in the designed filter.
    """
    def __init__(self) -> None:
        ...
    
    @property
    def c_node_capacitor(self) -> str:
        """Shunt capacitance assigned to each capacitor node.
        The default is ``0``.

        Returns
        -------
        str
        """
        ...
    
    @c_node_capacitor.setter
    def c_node_capacitor(self, c_node_capacitor): # -> None:
        ...
    
    @property
    def c_lead_inductor(self) -> str:
        """Series inductance assigned to each capacitor lead.
        The default is ``0``.

        Returns
        -------
        str
        """
        ...
    
    @c_lead_inductor.setter
    def c_lead_inductor(self, c_lead_inductor): # -> None:
        ...
    
    @property
    def l_node_capacitor(self) -> str:
        """Shunt capacitance assigned to each inductor node.

        The default is` ``0``.

        Returns
        -------
        str
        """
        ...
    
    @l_node_capacitor.setter
    def l_node_capacitor(self, l_node_capacitor): # -> None:
        ...
    
    @property
    def l_lead_inductor(self) -> str:
        """Series inductance assigned to each inductor lead.

        The default is ``0``.

        Returns
        -------
        str
        """
        ...
    
    @l_lead_inductor.setter
    def l_lead_inductor(self, l_lead_inductor): # -> None:
        ...
    
    @property
    def r_node_capacitor(self) -> str:
        """Shunt capacitance assigned to each resistor node.
        The default is ``0``.

        Returns
        -------
        str
        """
        ...
    
    @r_node_capacitor.setter
    def r_node_capacitor(self, r_node_capacitor): # -> None:
        ...
    
    @property
    def r_lead_inductor(self) -> str:
        """Series inductance assigned to each resistor lead.

        The default is ``0``.

        Returns
        -------
        str
        """
        ...
    
    @r_lead_inductor.setter
    def r_lead_inductor(self, r_lead_inductor): # -> None:
        ...
    
    @property
    def c_node_compensate(self) -> bool:
        """Flag indicating if the adjusting capacitor values to compensate for node capacitance is enabled.

        Returns
        -------
        bool
        """
        ...
    
    @c_node_compensate.setter
    def c_node_compensate(self, c_node_compensate: bool): # -> None:
        ...
    
    @property
    def l_node_compensate(self) -> bool:
        """Flag indicating if the adjusting inductor values to compensate for lead inductance is enabled.

        Returns
        -------
        bool
        """
        ...
    
    @l_node_compensate.setter
    def l_node_compensate(self, l_node_compensate: bool): # -> None:
        ...
    


