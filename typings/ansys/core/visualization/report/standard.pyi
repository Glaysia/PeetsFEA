"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.generic.general_methods import pyaedt_function_handler
from ansys.aedt.core.visualization.report.common import CommonReport

"""
This module contains these classes: `Standard`, and `Spectral`.

This module provides all functionalities for creating and editing reports.

"""
class Standard(CommonReport):
    """Provides a reporting class that fits most of the app's standard reports."""
    def __init__(self, app, report_category, setup_name, expressions=...) -> None:
        ...
    
    @property
    def sub_design_id(self):
        """Sub design ID for a Circuit or HFSS 3D Layout sub design.

        Returns
        -------
        int
            Number of the sub design ID.
        """
        ...
    
    @sub_design_id.setter
    def sub_design_id(self, value): # -> None:
        ...
    
    @property
    def time_start(self):
        """Time start value.

        Returns
        -------
        str
            Time start value.
        """
        ...
    
    @time_start.setter
    def time_start(self, value): # -> None:
        ...
    
    @property
    def thinning(self):
        """Transient windowing.

        Returns
        -------
        int
        """
        ...
    
    @thinning.setter
    def thinning(self, value): # -> None:
        ...
    
    @property
    def thinning_points(self):
        """Transient thinning points.

        Returns
        -------
        int
        """
        ...
    
    @thinning_points.setter
    def thinning_points(self, value): # -> None:
        ...
    
    @property
    def dy_dx_tolerance(self):
        """Transient thinning points.

        Returns
        -------
        int
        """
        ...
    
    @dy_dx_tolerance.setter
    def dy_dx_tolerance(self, value): # -> None:
        ...
    
    @property
    def time_stop(self):
        """Time stop value.

        Returns
        -------
        str
            Time stop value.
        """
        ...
    
    @time_stop.setter
    def time_stop(self, value): # -> None:
        ...
    
    @property
    def pulse_rise_time(self): # -> Literal[0]:
        """Value of Pulse rise time for TDR plot.

        Returns
        -------
        float
            Pulse rise time.
        """
        ...
    
    @pulse_rise_time.setter
    def pulse_rise_time(self, val): # -> None:
        ...
    
    @property
    def maximum_time(self): # -> Literal[0]:
        """Value of maximum time for TDR plot.

        Returns
        -------
        float
            Maximum time.
        """
        ...
    
    @maximum_time.setter
    def maximum_time(self, val): # -> None:
        ...
    
    @property
    def step_time(self): # -> Literal[0]:
        """Value of step time for TDR plot.

        Returns
        -------
        float
            step time.
        """
        ...
    
    @step_time.setter
    def step_time(self, val): # -> None:
        ...
    
    @property
    def time_windowing(self): # -> Literal[0]:
        """Returns the TDR time windowing.

        Options are:
            * ``0`` : Rectangular
            * ``1`` : Bartlett
            * ``2`` : Blackman
            * ``3`` : Hamming
            * ``4`` : Hanning
            * ``5`` : Kaiser
            * ``6`` : Welch
            * ``7`` : Weber
            * ``8`` : Lanzcos.

        Returns
        -------
        int
            Time windowing.
        """
        ...
    
    @time_windowing.setter
    def time_windowing(self, val): # -> None:
        ...
    


class Spectral(CommonReport):
    """Provides for managing spectral reports from transient data."""
    def __init__(self, app, report_category, setup_name, expressions=...) -> None:
        ...
    
    @property
    def time_start(self):
        """Time start value.

        Returns
        -------
        str
            Time start.
        """
        ...
    
    @time_start.setter
    def time_start(self, value): # -> None:
        ...
    
    @property
    def time_stop(self):
        """Time stop value.

        Returns
        -------
        str
            Time stop.
        """
        ...
    
    @time_stop.setter
    def time_stop(self, value): # -> None:
        ...
    
    @property
    def window(self):
        """Window value.

        Returns
        -------
        str
            Window.
        """
        ...
    
    @window.setter
    def window(self, value): # -> None:
        ...
    
    @property
    def kaiser_coeff(self):
        """Kaiser value.

        Returns
        -------
        str
            Kaiser coefficient.
        """
        ...
    
    @kaiser_coeff.setter
    def kaiser_coeff(self, value): # -> None:
        ...
    
    @property
    def adjust_coherent_gain(self):
        """Coherent gain flag.

        Returns
        -------
        bool
            ``True`` if coherent gain is enabled, ``False`` otherwise.
        """
        ...
    
    @adjust_coherent_gain.setter
    def adjust_coherent_gain(self, value): # -> None:
        ...
    
    @property
    def plot_continous_spectrum(self):
        """Continuous spectrum flag.

        Returns
        -------
        bool
            ``True`` if continuous spectrum is enabled, ``False`` otherwise.
        """
        ...
    
    @plot_continous_spectrum.setter
    def plot_continous_spectrum(self, value): # -> None:
        ...
    
    @property
    def max_frequency(self):
        """Maximum spectrum frequency.

        Returns
        -------
        str
            Maximum spectrum frequency.
        """
        ...
    
    @max_frequency.setter
    def max_frequency(self, value): # -> None:
        ...
    
    @pyaedt_function_handler()
    def create(self, name=...): # -> Literal[True]:
        """Create an eye diagram report.

        Parameters
        ----------
        name : str, optional
            Plot name. The default is ``None``, in which case
            the default name is used.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.
        """
        ...
    


