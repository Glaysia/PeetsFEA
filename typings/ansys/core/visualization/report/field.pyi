"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.generic.general_methods import pyaedt_function_handler
from ansys.aedt.core.visualization.report.common import CommonReport
from ansys.aedt.core.visualization.report.standard import Standard

"""
This module contains these classes: `AntennaParameters`, `Fields`, `NearField`, `FarField`, and `Emission`.

This module provides all functionalities for creating and editing reports.

"""
class AntennaParameters(Standard):
    """Provides a reporting class that fits antenna parameter reports in an HFSS plot."""
    def __init__(self, app, report_category, setup_name, far_field_sphere=..., expressions=...) -> None:
        ...
    
    @property
    def far_field_sphere(self):
        """Far field sphere name.

        Returns
        -------
        str
            Name of the far field sphere.
        """
        ...
    
    @far_field_sphere.setter
    def far_field_sphere(self, value): # -> None:
        ...
    


class Fields(CommonReport):
    """Handler to manage fields."""
    @pyaedt_function_handler(app="post_app")
    def __init__(self, post_app, report_category, setup_name, expressions=...) -> None:
        ...
    
    @property
    def point_number(self):
        """Polygon point number.

        Returns
        -------
        str
            Point number.
        """
        ...
    
    @point_number.setter
    def point_number(self, value): # -> None:
        ...
    


class NearField(CommonReport):
    """Provides for managing near field reports."""
    def __init__(self, app, report_category, setup_name, expressions=...) -> None:
        ...
    
    @property
    def near_field(self):
        """Near field name.

        Returns
        -------
        str
            Field name.
        """
        ...
    
    @near_field.setter
    def near_field(self, value): # -> None:
        ...
    


class FarField(CommonReport):
    """Provides for managing far field reports."""
    def __init__(self, app, report_category, setup_name, expressions=..., **variations) -> None:
        ...
    
    @property
    def far_field_sphere(self):
        """Far field sphere name.

        Returns
        -------
        str
            Field name.
        """
        ...
    
    @far_field_sphere.setter
    def far_field_sphere(self, value): # -> None:
        ...
    


class Emission(CommonReport):
    """Provides for managing emission reports."""
    def __init__(self, app, report_category, setup_name, expressions=...) -> None:
        ...
    


