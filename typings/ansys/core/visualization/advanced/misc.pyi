"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.generic.general_methods import pyaedt_function_handler
from ansys.aedt.core.internal.checks import graphics_required

class BoxFacePointsAndFields:
    """Data model class containing field component and coordinates."""
    def __init__(self) -> None:
        ...
    
    def set_xyz_points(self, x, y, z): # -> None:
        """Set X, Y, Z coordinates."""
        ...
    
    def set_field_component(self, field_component, real, imag, invert): # -> None:
        """Set Field component Real and imaginary parts."""
        ...
    
    def fill_empty_data(self): # -> None:
        """Fill empty data with zeros."""
        ...
    


@pyaedt_function_handler()
def convert_nearfield_data(dat_folder, frequency=..., invert_phase_for_lower_faces=..., output_folder=...):
    """Convert a near field data folder to hfss `nfd` file and link it to `and` file.

    Parameters
    ----------
    dat_folder : str
        Full path to the folder containing near fields data.
        Folder will contain 24 files in the following format: `data_Ex_ymin.dat`. Same for H Fields.
    frequency : float, int, str
        Frequency in `GHz`.
    invert_phase_for_lower_faces : bool
        Add 180 deg for all fields at 'negative' faces (xmin, ymin, zmin).
    output_folder : str, optional
        Output folder where files will be saved.

    Returns
    -------
    str
        Full path to `.and` file.
    """
    ...

@pyaedt_function_handler()
def parse_rdat_file(file_path): # -> dict[Any, Any]:
    """
    Parse Ansys report '.rdat' file.

    Returns
    -------
    dict
        Report data.
    """
    ...

@pyaedt_function_handler()
@graphics_required
def nastran_to_stl(input_file, output_folder=..., decimation=..., enable_planar_merge=..., preview=...): # -> tuple[list[Any], dict[str, Any], bool] | Literal[False]:
    """Convert Nastran file into stl."""
    ...

@pyaedt_function_handler()
@graphics_required
def simplify_stl(input_file, output_file=..., decimation=..., preview=...):
    """Import and simplify a stl file using pyvista and fast-simplification.

    Parameters
    ----------
    input_file : str
        Input stl file.
    output_file : str, optional
        Output stl file.
    decimation : float, optional
        Fraction of the original mesh to remove before creating the stl file.  If set to ``0.9``,
        this function will try to reduce the data set to 10% of its
        original size and will remove 90% of the input triangles.
    preview : bool, optional
        Whether to preview the model in pyvista or skip it.

    Returns
    -------
    str
        Full path to output stl.
    """
    ...

