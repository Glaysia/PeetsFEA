"""
This type stub file was generated by pyright.
"""

class FilterDesignBase:
    """Provides the `FilterSolutions` main parameters applicable for all design types."""
    _active_design = ...
    def __init__(self, version=...) -> None:
        ...
    
    def close(self): # -> None:
        """Closes the current design and clears the active design."""
        ...
    


class LumpedDesign(FilterDesignBase):
    """Provides the `FilterSolutions` application interface for lumped filter designs.
    This class provides access to lumped filter design parameters.

    Parameters
    ----------
    version : str, optional
        Version of AEDT in ``xxxx.x`` format. The default is ``None``.

    Example
    --------
    Create a ``FilterSolutions.LumpedDesign`` instance with a band-pass elliptic filter.

    >>> import ansys.aedt.core
    >>> import ansys.aedt.core.filtersolutions
    >>> LumpedDesign = ansys.aedt.core.FilterSolutions.LumpedDesign(version="2025.1")
    >>> LumpedDesign.attributes.filter_class = FilterClass.BAND_PASS
    >>> LumpedDesign.attributes.filter_type = FilterType.ELLIPTIC
    """
    def __init__(self, version=...) -> None:
        ...
    


class DistributedDesign(FilterDesignBase):
    """Provides the `FilterSolutions` application interface for distributed filter designs.
    This class provides access to distributed filter design parameters.

    Parameters
    ----------
    version : str, optional
        Version of AEDT in ``xxxx.x`` format. The default is ``None``.

    Example
    --------
    Create a ``FilterSolutions.DistributedDesign`` instance with a band-pass interdigital filter.

    >>> import ansys.aedt.core
    >>> import ansys.aedt.core.filtersolutions
    >>> DistributedDesign = ansys.aedt.core.FilterSolutions.DistributedDesign(version="2025.2")
    >>> DistributedDesign.attributes.filter_class = FilterClass.BAND_PASS
    >>> DistributedDesign.topology.topology_type = TopologyType.INTERDIGITAL
    """
    def __init__(self, version=...) -> None:
        ...
    


