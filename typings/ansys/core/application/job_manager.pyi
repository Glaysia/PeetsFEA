"""
This type stub file was generated by pyright.
"""

def get_hpc_info(filename): # -> tuple[str, str]:
    """Retrieve HPC information.

    Parameters
    ----------
    filename : str
        Name of the file.

    Returns
    -------
    config_name : str
        Config name.
    design_type : str
        Design name.

    """
    ...

def update_hpc_option(filnename, propertyname, propertyvalue, isvaluestring=..., separator=...): # -> bool:
    """Update an HPC option in the configuration file.

    Parameters
    ----------
    filnename : str
        Full path and name of the configuration file. The file type can be ACF or TXT.
    propertyname : str
        Name of the property to update.
    propertyvalue :
        Value for the property.
    isvaluestring : bool, optional
        Whether the value  is a string. The default is ``True``.
    separator : str, optional
        Separates the property name from its value. The default is ``=``.

    Returns
    -------
    type

    """
    ...

def update_simulation_cores(name, nc): # -> None:
    """Update the HPC number of cores in the configuration file.

    Parameters
    ----------
    name : str
        Name of the configuration file.
    nc : int or string
        Number of simulation cores.

    """
    ...

def update_simulation_engines(name, nc): # -> None:
    """Update the HPC number of simulaton engines in the configuration file.

    Parameters
    ----------
    name : str
        Name of the configuration file.
    nc : int or str
        Number of simulaton engines.

    """
    ...

def update_machine_name(name, machinename): # -> None:
    """Update the machine name.

    Parameters
    ----------
    name : str
        Path of the configuration file.
    machinename : str
        New name of the machine.

    """
    ...

def update_config_name(name, machinename): # -> None:
    """Update the name of the configuration.

    Parameters
    ----------
    name : str
        Path of the configuration file.
    machinename : str
        New name of the machine.

    """
    ...

def update_cluster_cores(file_name, param_name, param_val): # -> None:
    """Update the number of cluster cores in the configuration file.

    Parameters
    ----------
    file_name : str
        Full path and name of the configuration file. The file type can be ACF or TXT.
    param_name : str
        Name of the parameter.
    param_val : int
         New number of cluster cores.

    """
    ...

def update_hpc_template(file_name, param_name, param_val): # -> None:
    """Update a parameter in the HPC template file.

    Parameters
    ----------
    file_name : str
        Full path and name of the HPC template file.
    param_name : str
        Name of the parameter to update.
    param_val : int
        Value of the parameter.

    """
    ...

