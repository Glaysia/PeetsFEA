"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from ansys.aedt.core.application.analysis_3d import FieldAnalysis3D
from ansys.aedt.core.application.design import DesignSettingsManipulation

class FieldAnalysisIcepak(FieldAnalysis3D):
    """Manages Icepak field analysis setup.

    This class is automatically initialized by an application call from one Icepak.
    See the application function for parameter definitions.

    Parameters
    ----------
    application : str
        3D application that is to initialize the call.
    project : str, optional
        Name of the project to select or the full path to the project
        or AEDTZ archive to open. The default is ``None``, in which
        case an attempt is made to get an active project. If no
        projects are present, an empty project is created.
    design : str, optional
        Name of the design to select. The default is ``None``, in
        which case an attempt is made to get an active design. If no
        designs are present, an empty design is created.
    solution_type : str, optional
        Solution type to apply to the design. The default is
        ``None``, in which case the default type is applied.
    setup : str, optional
        Name of the setup to use as the nominal. The default is
        ``None``, in which case the active setup is used or
        nothing is used.
    version : str, int, float, optional
        Version of AEDT  to use. The default is ``None``, in which case
        the active version or latest installed version is used.
    non_graphical : bool, optional
        Whether to run AEDT in non-graphical mode. The default
        is ``False``, in which case AEDT is launched in the graphical mode.
    new_desktop : bool, optional
        Whether to launch an instance of AEDT in a new thread, even if
        another instance of the ``specified_version`` is active on the
        machine. The default is ``False``.
    close_on_exit : bool, optional
        Whether to release AEDT on exit. The default is ``False``.
    student_version : bool, optional
        Whether to enable the student version of AEDT. The default
        is ``False``.
    aedt_process_id : int, optional
        Only used when ``new_desktop = False``, specifies by process ID which instance
        of Electronics Desktop to point PyAEDT at.
    remove_lock : bool, optional
        Whether to remove lock to project before opening it or not.
        The default is ``False``, which means to not unlock
        the existing project if needed and raise an exception.
    """
    def __init__(self, application: str, project: str, design: str, solution_type: str, setup: Optional[str] = ..., version: Optional[Union[str, int, float]] = ..., non_graphical: bool = ..., new_desktop: bool = ..., close_on_exit: bool = ..., student_version=..., machine: str = ..., port: int = ..., aedt_process_id: Optional[int] = ..., remove_lock: bool = ...) -> None:
        ...
    
    @property
    def post(self): # -> PostProcessor3D | PostProcessor3DLayout | PostProcessorCircuit | PostProcessorHFSS | PostProcessorIcepak | PostProcessorMaxwell | None:
        """Icepak post processor.

        Returns
        -------
        :class:`ansys.aedt.core.visualization.post.post_icepak.PostProcessorIcepak`
            PostProcessor object.
        """
        ...
    
    @property
    def mesh(self): # -> IcepakMesh | None:
        """Mesh.

        Returns
        -------
        :class:`ansys.aedt.core.modules.mesh_icepak.IcepakMesh`
            Mesh object.
        """
        ...
    
    @property
    def monitor(self): # -> Monitor:
        """Property to handle monitor objects.

        Returns
        -------
        :class:`ansys.aedt.core.modules.monitor_icepak.Monitor`
        """
        ...
    


class IcepakDesignSettingsManipulation(DesignSettingsManipulation):
    """Manages Icepak design settings.

    This class provides methods to modify specific design settings like ambient temperature,
    gauge pressure, and gravity vector. The settings are managed through key-value pairs
    and validated based on specific rules for each key.

    Parameters
    ----------
    app : FieldAnalysisIcepak
        Icepak application that is to initialize the call.
    """
    def __init__(self, app) -> None:
        ...
    
    def execute(self, k, v) -> str:
        """
        Modify the design settings for the given key with the specified value.

        Handles specific keys like ``"AmbTemp"``, ``"AmbRadTemp"``, ``"AmbGaugePressure"``, and ``"GravityVec"``,
        applying custom logic to validate and format the values before assignment.

        Parameters
        ----------
            k : str
                The design setting key to modify.
            v: float, int, str
                The value to assign to the setting. The expected type and format depend on the key.
        Returns
        -------
        str
             Updated value after processing, or an error message if the operation fails.
        """
        ...
    


