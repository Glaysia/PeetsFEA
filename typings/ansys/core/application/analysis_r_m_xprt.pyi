"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.application.analysis import Analysis
from ansys.aedt.core.generic.general_methods import pyaedt_function_handler

class FieldAnalysisRMxprt(Analysis):
    """Manages RMXprt field analysis setup. (To be implemented.)

    This class is automatically initialized by an application call (like HFSS,
    Q3D...). Refer to the application function for inputs definition.

    Parameters
    ----------
    Returns
    -------

    """
    def __init__(self, application, projectname, designname, solution_type, setup_name=..., version=..., non_graphical=..., new_desktop=..., close_on_exit=..., student_version=..., machine=..., port=..., aedt_process_id=..., remove_lock=...) -> None:
        ...
    
    @property
    def post(self): # -> PostProcessor3D | PostProcessor3DLayout | PostProcessorCircuit | PostProcessorHFSS | PostProcessorIcepak | PostProcessorMaxwell | None:
        """Post Object.

        Returns
        -------
        :class:`ansys.aedt.core.visualization.post.post_circuit.PostProcessorCircuit`
            PostProcessor object.
        """
        ...
    
    @property
    def modeler(self): # -> ModelerRMxprt | None:
        """Modeler.

        Returns
        -------
        :class:`ansys.aedt.core.modules.modeler_2d.ModelerRMxprt`

        """
        ...
    
    @pyaedt_function_handler()
    def disable_modelcreation(self, solution_type=...): # -> Literal[True]:
        """Enable the RMxprt solution.

        Parameters
        ----------
        solution_type :
            Type of the solution. The default is ``None``.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.

        """
        ...
    
    @pyaedt_function_handler()
    def enable_modelcreation(self, solution_type=...): # -> Literal[True]:
        """Enable model creation for the Maxwell model wizard.

        Parameters
        ----------
        solution_type : str
            Type of the solution. The default is ``None``.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.

        """
        ...
    
    @pyaedt_function_handler()
    def create_maxwell_design(self, setup_name, variation=..., maxwell_2d=...): # -> Maxwell2d | Maxwell3d | Literal[False]:
        """Create a Maxwell design from Rmxprt project. Setup has to be solved to run this method.

        Parameters
        ----------
        setup_name : str
            Name of setup.
        variation : str, optional
            Variation string to be applied.
        maxwell_2d : bool, optional
            Whether if the model has to be exported in Maxwell 2D or Maxwell 3D. Default is ``True``.

        Returns
        -------
        :class:`ansys.aedt.core.maxwell.Maxwell2d` or :class:`ansys.aedt.core.maxwell.Maxwell3d`
            Maxwell object.
        """
        ...
    
    @pyaedt_function_handler()
    def set_material_threshold(self, conductivity=..., permeability=...): # -> bool:
        """Set material threshold.

        Parameters
        ----------
        conductivity : float, optional
            Conductivity threshold.
            The default value is 100000.
        permeability : float, optional
            Permeability threshold.
            The default value is 100.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.
        """
        ...
    


