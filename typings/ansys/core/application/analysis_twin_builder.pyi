"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.application.analysis import Analysis
from ansys.aedt.core.generic.general_methods import pyaedt_function_handler

class AnalysisTwinBuilder(Analysis):
    """Provides the Twin Builder Analysis Setup (TwinBuilder).

    It is automatically initialized by Application call (Twin Builder).
    Refer to Application function for inputs definition

    Parameters
    ----------
    """
    @property
    def existing_analysis_setups(self): # -> list[Any]:
        """Existing analysis setups.

        .. deprecated:: 0.15.0
            Use :func:`setup_names` from setup object instead.

        Returns
        -------
        list of str
            List of all analysis setups in the design.
        """
        ...
    
    @property
    def setup_names(self): # -> list[Any]:
        """Setup names.

        References
        ----------
        >>> oModule.GetAllSolutionSetups"""
        ...
    
    def __init__(self, application, projectname, designname, solution_type, setup_name=..., version=..., non_graphical=..., new_desktop=..., close_on_exit=..., student_version=..., machine=..., port=..., aedt_process_id=..., remove_lock=...) -> None:
        ...
    
    @property
    def modeler(self): # -> ModelerTwinBuilder | None:
        """Design Modeler.

        Returns
        -------
        :class:`ansys.aedt.core.modeler.schematic.ModelerTwinBuilder`
        """
        ...
    
    @property
    def post(self): # -> PostProcessor3D | PostProcessor3DLayout | PostProcessorCircuit | PostProcessorHFSS | PostProcessorIcepak | PostProcessorMaxwell | None:
        """Design Postprocessor.

        Returns
        -------
        :class:`ansys.aedt.core.visualization.post.post_circuit.PostProcessorCircuit`
            PostProcessor object.
        """
        ...
    
    @pyaedt_function_handler(setupname="name", setuptype="setup_type")
    def create_setup(self, name=..., setup_type=..., **kwargs): # -> SetupCircuit:
        """Create a setup.

        Parameters
        ----------
        name : str, optional
            Name of the setup. The default is ``"MySetupAuto"``.
        setup_type : str
            Type of the setup. The default is ``None``, in which case the default
            type is applied.
        **kwargs : dict, optional
            Extra arguments to set up the circuit.
            Available keys depend on the setup chosen.
            For more information, see
            :doc:`../SetupTemplatesCircuit`.

        Returns
        -------
        :class:`ansys.aedt.core.modules.solve_setup.SetupCircuit`
            Setup object.
        """
        ...
    


