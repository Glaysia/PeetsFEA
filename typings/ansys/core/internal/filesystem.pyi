"""
This type stub file was generated by pyright.
"""

def search_files(dirname, pattern=...): # -> list[str]:
    """Search for files inside a directory given a specific pattern.

    Parameters
    ----------
    dirname : str
    pattern :str, optional

    Returns
    -------
    list
    """
    ...

def my_location(): # -> str:
    """ """
    ...

class Scratch:
    """ """
    @property
    def path(self): # -> str:
        """ """
        ...
    
    @property
    def is_empty(self): # -> bool:
        """ """
        ...
    
    def __init__(self, local_path, permission=..., volatile=...) -> None:
        ...
    
    def remove(self): # -> None:
        """ """
        ...
    
    def copyfile(self, src_file, dst_filename=...): # -> str:
        """Copy a file to the scratch directory.

        The target filename is optional. If omitted, the target file name is identical to the source file name.

        Parameters
        ----------
        src_file : str
            Source file with fullpath.
        dst_filename : str, optional
            Destination filename with the extension. The default is ``None``,
            in which case the destination file is given the same name as the
            source file.

        Returns
        -------
        dst_file : str
            Full path and file name of the copied file.
        """
        ...
    
    def copyfolder(self, src_folder, destfolder): # -> Literal[True]:
        """

        Parameters
        ----------
        src_folder :

        destfolder :


        Returns
        -------

        """
        ...
    
    def __enter__(self): # -> Self:
        ...
    
    def __exit__(self, ex_type, ex_value, ex_traceback): # -> None:
        ...
    


def get_json_files(start_folder): # -> list[str]:
    """
    Get the absolute path to all *.json files in start_folder.

    Parameters
    ----------
    start_folder, str
        Path to the folder where the json files are located.

    Returns
    -------
    """
    ...

def is_safe_path(path, allowed_extensions=...): # -> bool:
    """Validate if a path is safe to use."""
    ...

