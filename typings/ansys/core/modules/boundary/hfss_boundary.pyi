"""
This type stub file was generated by pyright.
"""

from ansys.aedt.core.generic.general_methods import pyaedt_function_handler
from ansys.aedt.core.modeler.cad.elements_3d import BinaryTreeNode
from ansys.aedt.core.modules.boundary.common import BoundaryCommon

class FieldSetup(BoundaryCommon, BinaryTreeNode):
    """Manages far field and near field component data and execution.

    Examples
    --------
    In this example the sphere1 returned object is a ``ansys.aedt.core.modules.boundary.hfss_boundary.FarFieldSetup``
    >>> from ansys.aedt.core import Hfss
    >>> hfss = Hfss()
    >>> sphere1 = hfss.insert_infinite_sphere()
    >>> sphere1.props["ThetaStart"] = "-90deg"
    >>> sphere1.props["ThetaStop"] = "90deg"
    >>> sphere1.props["ThetaStep"] = "2deg"
    >>> sphere1.delete()
    """
    def __init__(self, app, component_name, props, component_type) -> None:
        ...
    
    @property
    def props(self): # -> BoundaryProps | dict[Any, Any]:
        """Field Properties."""
        ...
    
    @property
    def name(self): # -> str | Any:
        """Boundary Name."""
        ...
    
    @name.setter
    def name(self, value): # -> None:
        ...
    
    @pyaedt_function_handler()
    def create(self): # -> bool:
        """Create a Field Setup Component in HFSS.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.

        """
        ...
    
    @pyaedt_function_handler()
    def update(self): # -> Literal[True]:
        """Update the Field Setup in AEDT.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.
        """
        ...
    
    @pyaedt_function_handler()
    def delete(self): # -> Literal[True]:
        """Delete the Field Setup in AEDT.

        Returns
        -------
        bool
            ``True`` when successful, ``False`` when failed.

        """
        ...
    


class FarFieldSetup(FieldSetup):
    """Manages Far Field Component data and execution.

    Examples
    --------
    in this example the sphere1 returned object is a ``ansys.aedt.core.modules.boundary.hfss_boundary.FarFieldSetup``
    >>> from ansys.aedt.core import Hfss
    >>> hfss = Hfss()
    >>> sphere1 = hfss.insert_infinite_sphere()
    >>> sphere1.props["ThetaStart"] = "-90deg"
    >>> sphere1.props["ThetaStop"] = "90deg"
    >>> sphere1.props["ThetaStep"] = "2deg"
    >>> sphere1.delete()
    """
    def __init__(self, app, component_name, props, component_type, units=...) -> None:
        ...
    
    @property
    def definition(self):
        """Set/Get the Far Field Angle Definition."""
        ...
    
    @definition.setter
    def definition(self, value): # -> None:
        ...
    
    @property
    def use_custom_radiation_surface(self):
        """Set/Get the Far Field Radiation Surface Enable."""
        ...
    
    @use_custom_radiation_surface.setter
    def use_custom_radiation_surface(self, value): # -> None:
        ...
    
    @property
    def custom_radiation_surface(self):
        """Set/Get the Far Field Radiation Surface FaceList."""
        ...
    
    @custom_radiation_surface.setter
    def custom_radiation_surface(self, value): # -> None:
        ...
    
    @property
    def use_local_coordinate_system(self):
        """Set/Get the usage of a custom Coordinate System."""
        ...
    
    @use_local_coordinate_system.setter
    def use_local_coordinate_system(self, value): # -> None:
        ...
    
    @property
    def local_coordinate_system(self): # -> None:
        """Set/Get the custom Coordinate System name."""
        ...
    
    @local_coordinate_system.setter
    def local_coordinate_system(self, value): # -> None:
        ...
    
    @property
    def polarization(self):
        """Set/Get the Far Field Polarization."""
        ...
    
    @polarization.setter
    def polarization(self, value): # -> None:
        ...
    
    @property
    def slant_angle(self): # -> None:
        """Set/Get the Far Field Slant Angle if Polarization is Set to `Slant`."""
        ...
    
    @slant_angle.setter
    def slant_angle(self, value): # -> None:
        ...
    
    @property
    def theta_start(self): # -> None:
        """Set/Get the Far Field Theta Start Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def theta_stop(self): # -> None:
        """Set/Get the Far Field Theta Stop Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def theta_step(self): # -> None:
        """Set/Get the Far Field Theta Step Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def phi_start(self): # -> None:
        """Set/Get the Far Field Phi Start Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def phi_stop(self): # -> None:
        """Set/Get the Far Field Phi Stop Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def phi_step(self): # -> None:
        """Set/Get the Far Field Phi Step Angle if Definition is Set to `Theta-Phi`."""
        ...
    
    @property
    def azimuth_start(self): # -> None:
        """Set/Get the Far Field Azimuth Start Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @property
    def azimuth_stop(self): # -> None:
        """Set/Get the Far Field Azimuth Stop Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @property
    def azimuth_step(self): # -> None:
        """Set/Get the Far Field Azimuth Step Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @property
    def elevation_start(self): # -> None:
        """Set/Get the Far Field Elevation Start Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @property
    def elevation_stop(self): # -> None:
        """Set/Get the Far Field Elevation Stop Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @property
    def elevation_step(self): # -> None:
        """Set/Get the Far Field Elevation Step Angle if Definition is Set to `Az Over El` or `El Over Az`."""
        ...
    
    @theta_start.setter
    def theta_start(self, value): # -> None:
        ...
    
    @theta_stop.setter
    def theta_stop(self, value): # -> None:
        ...
    
    @theta_step.setter
    def theta_step(self, value): # -> None:
        ...
    
    @phi_start.setter
    def phi_start(self, value): # -> None:
        ...
    
    @phi_stop.setter
    def phi_stop(self, value): # -> None:
        ...
    
    @phi_step.setter
    def phi_step(self, value): # -> None:
        ...
    
    @azimuth_start.setter
    def azimuth_start(self, value): # -> None:
        ...
    
    @azimuth_stop.setter
    def azimuth_stop(self, value): # -> None:
        ...
    
    @azimuth_step.setter
    def azimuth_step(self, value): # -> None:
        ...
    
    @elevation_start.setter
    def elevation_start(self, value): # -> None:
        ...
    
    @elevation_stop.setter
    def elevation_stop(self, value): # -> None:
        ...
    
    @elevation_step.setter
    def elevation_step(self, value): # -> None:
        ...
    


class NearFieldSetup(FieldSetup):
    """Manages Near Field Component data and execution.

    Examples
    --------
    In this example the rectangle1 returned object is a
    ``ansys.aedt.core.modules.boundary.hfss_boundary.NearFieldSetup``

    >>> from ansys.aedt.core import Hfss
    >>> hfss = Hfss()
    >>> rectangle1 = hfss.insert_near_field_rectangle()
    """
    def __init__(self, app, component_name, props, component_type) -> None:
        ...
    


